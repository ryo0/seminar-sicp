#lang racket
(define (A x y)
  (cond
   ((= y 0) 0)
   ((= x 0) (* 2 y))
   ((= y 1) 2)
   (else
    (A (- x 1) (A x (- y 1)))
    )
   )
  )
(display (A 1 10))
; = (A 0 (A 1 9))
; = (* 2 (A 1 9))
; = (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (* 2 (A 1 1))))))))))
; = 1024
(newline)
(display (A 2 4))
; = (A 1 (A 2 3))
; = (A 1 (A 1 (A 2 2)))
; = (A 1 (A 1 (A 1 (A 2 1))))
; = (A 1 (A 1 (A 1 2)))
; = (A 1 (A 1 4))
; = (A 1 16)
; = 2^16
(newline)
(display (A 3 3))
(newline)
; = (A 2 (A 3 2))
; = (A 2 (A 2 (A 3 1)))
; = (A 2 (A 2 2))
; = (A 2 (A 1 (A 2 1))
; = (A 2 (A 1 2))
; = (A 2 (A 0 (A 1 1)))
; = (A 2 (A 0 2))
; = (A 2 4)
; = 2^16

; (A 0 n) = 2 * n

; (A 1 n) = (A 0 (A 0 (A 0 … (A 1 0))))
; = (* 2 (* 2 * 2 … 2)))
; = 2^n

; (A 2 n)
; = (A 1 (A 1 (A 1 … (A 2 1))))
; = (A 1をn-1回2に適用)
; = 2^(2^…(2^2))
; 指数の2の数がn-1個
